{"ast":null,"code":"// src/pages/Dashboard.js\nimport React,{useEffect,useState}from'react';import API from'../api';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Dashboard(_ref){let{handleLogout}=_ref;const[userData,setUserData]=useState(null);const[leaderboard,setLeaderboard]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState('');const navigate=useNavigate();useEffect(()=>{const fetchAll=async()=>{setIsLoading(true);try{const[userRes,lbRes]=await Promise.all([API.get('/api/user'),API.get('/api/leaderboard')]);setUserData(userRes.data);setLeaderboard(lbRes.data);setError('');}catch(err){var _err$response;setError('Failed to load dashboard data');if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){handleLogout();navigate('/login');}}finally{setIsLoading(false);}};fetchAll();},[handleLogout,navigate]);if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading dashboard...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error});// XP thresholds for each belt\nconst RANKS=[{name:\"White Belt\",xp:0},{name:\"Yellow Belt\",xp:20},{name:\"Orange Belt\",xp:40},{name:\"Green Belt\",xp:70},{name:\"Blue Belt\",xp:100},{name:\"Purple Belt\",xp:140},{name:\"Brown Belt\",xp:190},{name:\"Black Belt\",xp:250}];// find current and next\nconst currentIndex=RANKS.slice().reverse().findIndex(r=>userData.xp>=r.xp);const currentRank=RANKS[RANKS.length-1-currentIndex];const nextRank=currentIndex>0?RANKS[RANKS.length-currentIndex]:null;const xpIntoLevel=nextRank?userData.xp-currentRank.xp:0;const xpForLevel=nextRank?nextRank.xp-currentRank.xp:1;const pct=nextRank?Math.round(xpIntoLevel/xpForLevel*100):100;return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"dashboard-header\",children:[\"Welcome, \",/*#__PURE__*/_jsx(\"strong\",{children:userData.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card\",style:{maxWidth:'600px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Total XP Earned\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:userData.xp})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Current Rank: \",/*#__PURE__*/_jsx(\"strong\",{children:userData.rank})]}),nextRank&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${pct}%`}})}),/*#__PURE__*/_jsxs(\"p\",{children:[xpForLevel-xpIntoLevel,\" XP to \",nextRank.name]})]}),!nextRank&&/*#__PURE__*/_jsx(\"p\",{children:\"You\\u2019ve reached the highest rank!\"}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'1rem'},children:\"Practice Sessions\"}),userData.practice_summary.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No sessions logged yet.\"}):/*#__PURE__*/_jsx(\"ul\",{style:{textAlign:'left'},children:userData.practice_summary.map(ps=>/*#__PURE__*/_jsxs(\"li\",{children:[ps.title,\": \",/*#__PURE__*/_jsx(\"strong\",{children:ps.runs}),\" run\",ps.runs!==1&&'s']},ps.challenge_id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card\",style:{maxWidth:'300px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Leaderboard\"}),/*#__PURE__*/_jsx(\"ol\",{style:{textAlign:'left'},children:leaderboard.map(u=>/*#__PURE__*/_jsxs(\"li\",{children:[u.username,\": \",u.xp,\" XP\"]},u.username))})]})]})]});}","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","_ref","handleLogout","userData","setUserData","leaderboard","setLeaderboard","isLoading","setIsLoading","error","setError","navigate","fetchAll","userRes","lbRes","Promise","all","get","data","err","_err$response","response","status","children","className","RANKS","name","xp","currentIndex","slice","reverse","findIndex","r","currentRank","length","nextRank","xpIntoLevel","xpForLevel","pct","Math","round","username","style","maxWidth","rank","width","marginTop","practice_summary","textAlign","map","ps","title","runs","challenge_id","u"],"sources":["C:/Users/tay/Documents/GitHub/CodeDojo-Frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Dashboard({ handleLogout }) {\r\n    const [userData, setUserData] = useState(null);\r\n    const [leaderboard, setLeaderboard] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAll = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const [userRes, lbRes] = await Promise.all([\r\n                    API.get('/api/user'),\r\n                    API.get('/api/leaderboard')\r\n                ]);\r\n                setUserData(userRes.data);\r\n                setLeaderboard(lbRes.data);\r\n                setError('');\r\n            } catch (err) {\r\n                setError('Failed to load dashboard data');\r\n                if (err.response?.status === 401) {\r\n                    handleLogout();\r\n                    navigate('/login');\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchAll();\r\n    }, [handleLogout, navigate]);\r\n\r\n    if (isLoading) return <p>Loading dashboard...</p>;\r\n    if (error) return <p className=\"error-message\">{error}</p>;\r\n\r\n    // XP thresholds for each belt\r\n    const RANKS = [\r\n        { name: \"White Belt\", xp: 0 },\r\n        { name: \"Yellow Belt\", xp: 20 },\r\n        { name: \"Orange Belt\", xp: 40 },\r\n        { name: \"Green Belt\", xp: 70 },\r\n        { name: \"Blue Belt\", xp: 100 },\r\n        { name: \"Purple Belt\", xp: 140 },\r\n        { name: \"Brown Belt\", xp: 190 },\r\n        { name: \"Black Belt\", xp: 250 }\r\n    ];\r\n\r\n    // find current and next\r\n    const currentIndex = RANKS.slice().reverse().findIndex(r => userData.xp >= r.xp);\r\n    const currentRank = RANKS[RANKS.length - 1 - currentIndex];\r\n    const nextRank = currentIndex > 0\r\n        ? RANKS[RANKS.length - currentIndex]\r\n        : null;\r\n\r\n    const xpIntoLevel = nextRank\r\n        ? userData.xp - currentRank.xp\r\n        : 0;\r\n    const xpForLevel = nextRank\r\n        ? nextRank.xp - currentRank.xp\r\n        : 1;\r\n    const pct = nextRank\r\n        ? Math.round((xpIntoLevel / xpForLevel) * 100)\r\n        : 100;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h1 className=\"dashboard-header\">\r\n                Welcome, <strong>{userData.username}</strong>\r\n            </h1>\r\n\r\n            <div className=\"dashboard-content\">\r\n                <div className=\"dashboard-card\" style={{ maxWidth: '600px' }}>\r\n                    <h2>Total XP Earned</h2>\r\n                    <p><strong>{userData.xp}</strong></p>\r\n                    <p>Current Rank: <strong>{userData.rank}</strong></p>\r\n                    {nextRank && (\r\n                        <>\r\n                            <div className=\"progress-container\">\r\n                                <div\r\n                                    className=\"progress-bar\"\r\n                                    style={{ width: `${pct}%` }}\r\n                                />\r\n                            </div>\r\n                            <p>{xpForLevel - xpIntoLevel} XP to {nextRank.name}</p>\r\n                        </>\r\n                    )}\r\n                    {!nextRank && <p>Youâ€™ve reached the highest rank!</p>}\r\n\r\n                    <h3 style={{ marginTop: '1rem' }}>Practice Sessions</h3>\r\n                    {userData.practice_summary.length === 0\r\n                        ? <p>No sessions logged yet.</p>\r\n                        : (\r\n                            <ul style={{ textAlign: 'left' }}>\r\n                                {userData.practice_summary.map(ps => (\r\n                                    <li key={ps.challenge_id}>\r\n                                        {ps.title}: <strong>{ps.runs}</strong> run{ps.runs !== 1 && 's'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                </div>\r\n\r\n                {/* Leaderboard */}\r\n                <div className=\"dashboard-card\" style={{ maxWidth: '300px' }}>\r\n                    <h2>Leaderboard</h2>\r\n                    <ol style={{ textAlign: 'left' }}>\r\n                        {leaderboard.map(u => (\r\n                            <li key={u.username}>\r\n                                {u.username}: {u.xp} XP\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}