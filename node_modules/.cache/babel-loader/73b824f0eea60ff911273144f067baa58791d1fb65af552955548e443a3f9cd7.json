{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tay\\\\Documents\\\\GitHub\\\\CodeDojo-Frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [stayLoggedIn, setStayLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://cododojo-backend.onrender.com/login', {\n        username,\n        password\n      });\n      const token = response.data.access_token;\n      if (stayLoggedIn) {\n        localStorage.setItem('token', token);\n      } else {\n        sessionStorage.setItem('token', token);\n      }\n      setErrorMessage('');\n      setIsLoggedIn(true);\n      navigate('/dashboard');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setErrorMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid credentials!');\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          style: {\n            paddingRight: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: togglePasswordVisibility,\n          className: \"show-password\",\n          children: showPassword ? 'Hide' : 'Show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"stayLoggedIn\",\n          checked: stayLoggedIn,\n          onChange: e => setStayLoggedIn(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stayLoggedIn\",\n          children: \"Stay Logged In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        className: \"switch-link\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"3OiTr3PobPidcGtS197wpZndS68=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","username","setUsername","password","setPassword","showPassword","setShowPassword","stayLoggedIn","setStayLoggedIn","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","post","token","data","access_token","localStorage","setItem","sessionStorage","err","_err$response","_err$response$data","message","togglePasswordVisibility","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","style","position","paddingRight","onClick","checked","href","_c","$RefreshReg$"],"sources":["C:/Users/tay/Documents/GitHub/CodeDojo-Frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [stayLoggedIn, setStayLoggedIn] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('https://cododojo-backend.onrender.com/login', { username, password });\r\n            const token = response.data.access_token;\r\n\r\n            if (stayLoggedIn) {\r\n                localStorage.setItem('token', token);\r\n            } else {\r\n                sessionStorage.setItem('token', token);\r\n            }\r\n\r\n            setErrorMessage('');\r\n            setIsLoggedIn(true);\r\n            navigate('/dashboard');\r\n        } catch (err) {\r\n            setErrorMessage(err.response?.data?.message || 'Invalid credentials!');\r\n        }\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Login</h1>\r\n                <div>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div style={{ position: 'relative' }}>\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        style={{ paddingRight: '50px' }}\r\n                    />\r\n                    <span onClick={togglePasswordVisibility} className=\"show-password\">\r\n                        {showPassword ? 'Hide' : 'Show'}\r\n                    </span>\r\n                </div>\r\n                <div className=\"checkbox-container\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"stayLoggedIn\"\r\n                        checked={stayLoggedIn}\r\n                        onChange={(e) => setStayLoggedIn(e.target.checked)}\r\n                    />\r\n                    <label htmlFor=\"stayLoggedIn\">Stay Logged In</label>\r\n                </div>\r\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <p>\r\n                Don't have an account?{' '}\r\n                <a href=\"/register\" className=\"switch-link\">Register</a>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}