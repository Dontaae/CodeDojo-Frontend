{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Routes,Route,Navigate,Link,useLocation}from'react-router-dom';import Login from'./pages/Login';import Register from'./pages/Register';import Dashboard from'./pages/Dashboard';import Home from'./pages/Home';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[isLightMode,setIsLightMode]=useState(false);const location=useLocation();// Used to track the current route\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){setIsLoggedIn(true);}// Check saved light mode preference\nconst savedMode=localStorage.getItem('theme');if(savedMode==='light'){document.body.classList.add('light-mode');setIsLightMode(true);}},[]);const handleLogout=()=>{localStorage.removeItem('token');setIsLoggedIn(false);};const toggleLightMode=()=>{document.body.classList.toggle('light-mode');const newMode=document.body.classList.contains('light-mode');setIsLightMode(newMode);// Save the mode in localStorage\nlocalStorage.setItem('theme',newMode?'light':'dark');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-logo\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:isLightMode?`${process.env.PUBLIC_URL}/media/ninjatp.png`:`${process.env.PUBLIC_URL}/media/ninjatpd.png`,alt:\"Home\",className:\"ninja-logo\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"light-mode-btn\",onClick:toggleLightMode,style:{backgroundColor:isLightMode?'#ffffff':'#000000',color:isLightMode?'#000000':'#ffffff'},children:isLightMode?'Dark Mode':'Light Mode'}),location.pathname==='/dashboard'&&isLoggedIn&&/*#__PURE__*/_jsx(\"button\",{className:\"logout-btn\",onClick:handleLogout,style:{backgroundColor:'red',color:'white'},children:\"Logout\"})]}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:isLoggedIn?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"}):/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:isLoggedIn?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"}):/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?/*#__PURE__*/_jsx(Dashboard,{handleLogout:handleLogout}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","Link","useLocation","Login","Register","Dashboard","Home","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","isLoggedIn","setIsLoggedIn","isLightMode","setIsLightMode","location","token","localStorage","getItem","savedMode","document","body","classList","add","handleLogout","removeItem","toggleLightMode","toggle","newMode","contains","setItem","children","className","to","src","process","env","PUBLIC_URL","alt","onClick","style","backgroundColor","color","pathname","path","element"],"sources":["C:/Users/tay/Desktop/fixed/CodoDojo.io/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Home from './pages/Home';\r\n\r\nconst App = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isLightMode, setIsLightMode] = useState(false);\r\n    const location = useLocation(); // Used to track the current route\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            setIsLoggedIn(true);\r\n        }\r\n\r\n        // Check saved light mode preference\r\n        const savedMode = localStorage.getItem('theme');\r\n        if (savedMode === 'light') {\r\n            document.body.classList.add('light-mode');\r\n            setIsLightMode(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        setIsLoggedIn(false);\r\n    };\r\n\r\n    const toggleLightMode = () => {\r\n        document.body.classList.toggle('light-mode');\r\n        const newMode = document.body.classList.contains('light-mode');\r\n        setIsLightMode(newMode);\r\n\r\n        // Save the mode in localStorage\r\n        localStorage.setItem('theme', newMode ? 'light' : 'dark');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Header with Logo and Navbar */}\r\n            <div className=\"header-logo\">\r\n                <Link to=\"/\">\r\n                    <img\r\n                        src={isLightMode ? `${process.env.PUBLIC_URL}/media/ninjatp.png` : `${process.env.PUBLIC_URL}/media/ninjatpd.png`}\r\n                        alt=\"Home\"\r\n                        className=\"ninja-logo\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"navbar\">\r\n                {/* Light Mode Button */}\r\n                <button\r\n                    className=\"light-mode-btn\"\r\n                    onClick={toggleLightMode}\r\n                    style={{\r\n                        backgroundColor: isLightMode ? '#ffffff' : '#000000',\r\n                        color: isLightMode ? '#000000' : '#ffffff',\r\n                    }}\r\n                >\r\n                    {isLightMode ? 'Dark Mode' : 'Light Mode'}\r\n                </button>\r\n\r\n                {/* Conditionally Render Logout Button */}\r\n                {location.pathname === '/dashboard' && isLoggedIn && (\r\n                    <button\r\n                        className=\"logout-btn\"\r\n                        onClick={handleLogout}\r\n                        style={{\r\n                            backgroundColor: 'red',\r\n                            color: 'white',\r\n                        }}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {/* App Routes */}\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route\r\n                    path=\"/login\"\r\n                    element={isLoggedIn ? <Navigate to=\"/dashboard\" /> : <Login setIsLoggedIn={setIsLoggedIn} />}\r\n                />\r\n                <Route\r\n                    path=\"/register\"\r\n                    element={isLoggedIn ? <Navigate to=\"/dashboard\" /> : <Register />}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    element={isLoggedIn ? <Dashboard handleLogout={handleLogout} /> : <Navigate to=\"/login\" />}\r\n                />\r\n            </Routes>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}