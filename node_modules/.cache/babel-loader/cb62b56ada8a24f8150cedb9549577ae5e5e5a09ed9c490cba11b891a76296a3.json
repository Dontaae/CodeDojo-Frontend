{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tay\\\\Documents\\\\GitHub\\\\CodeDojo-Frontend\\\\src\\\\pages\\\\ChallengeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChallengeList() {\n  _s();\n  const [challenges, setChallenges] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const load = async () => {\n    setIsLoading(true);\n    try {\n      const res = await API.get('/api/challenges');\n      setChallenges(res.data);\n    } catch {\n      navigate('/login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-header\",\n      children: \"Challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: challenges.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: c.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Difficulty: \", c.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base XP: \", c.xp_reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attempts: \", c.run_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/challenges/${c.id}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"enter-btn\",\n            children: \"Practice & Earn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ChallengeList, \"zZrXtgGREiDJmSVe1OloRoNbx7Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ChallengeList;\nvar _c;\n$RefreshReg$(_c, \"ChallengeList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","API","jsxDEV","_jsxDEV","ChallengeList","_s","challenges","setChallenges","isLoading","setIsLoading","navigate","load","res","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","c","title","difficulty","xp_reward","run_count","to","id","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/tay/Documents/GitHub/CodeDojo-Frontend/src/pages/ChallengeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport API from '../api';\r\n\r\nexport default function ChallengeList() {\r\n    const [challenges, setChallenges] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    const load = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const res = await API.get('/api/challenges');\r\n            setChallenges(res.data);\r\n        } catch {\r\n            navigate('/login');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => { load(); }, []);\r\n\r\n    if (isLoading) return <p>Loadingâ€¦</p>;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h1 className=\"dashboard-header\">Challenges</h1>\r\n            <div className=\"dashboard-content\">\r\n                {challenges.map(c => (\r\n                    <div key={c.id} className=\"dashboard-card\">\r\n                        <h2>{c.title}</h2>\r\n                        <p>Difficulty: {c.difficulty}</p>\r\n                        <p>Base XP: {c.xp_reward}</p>\r\n                        <p>Attempts: {c.run_count}</p>\r\n                        <Link to={`/challenges/${c.id}`} style={{ textDecoration: 'none' }}>\r\n                            <button className=\"enter-btn\">Practice & Earn</button>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}