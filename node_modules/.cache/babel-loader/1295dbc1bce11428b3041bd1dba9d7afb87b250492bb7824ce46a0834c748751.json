{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tay\\\\Documents\\\\GitHub\\\\CodeDojo-Frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  handleLogout\n}) {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [challenges, setChallenges] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAll = async () => {\n      setIsLoading(true);\n      try {\n        const [userRes, chRes] = await Promise.all([API.get('/api/user'), API.get('/api/challenges')]);\n        setUserData(userRes.data);\n        setChallenges(chRes.data);\n      } catch (err) {\n        var _err$response;\n        setError('Failed to load dashboard data');\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n          handleLogout();\n          navigate('/login');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAll();\n  }, [handleLogout, navigate]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No user data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Identify hard challenges\n  const hardChals = challenges.filter(c => c.difficulty === 'hard');\n  // Count how many distinct hard challenges have at least one run\n  const completedHardCount = hardChals.filter(c => c.run_count > 0).length;\n  const hardProgressPercent = hardChals.length ? Math.round(completedHardCount / hardChals.length * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [\"Welcome to CodeDojo, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: userData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total XP: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userData.xp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Rank: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userData.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        style: {\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hard Drills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [completedHardCount, \" / \", hardChals.length, \" hard challenges completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${hardProgressPercent}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), hardProgressPercent === 100 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: \"All hard drills done! Black Belt unlocked!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"XeBvPXh8K9gKSKIA9dOIN0WGsOs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","jsxDEV","_jsxDEV","Dashboard","handleLogout","_s","userData","setUserData","challenges","setChallenges","isLoading","setIsLoading","error","setError","navigate","fetchAll","userRes","chRes","Promise","all","get","data","err","_err$response","response","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hardChals","filter","c","difficulty","completedHardCount","run_count","length","hardProgressPercent","Math","round","username","email","xp","rank","style","maxWidth","width","_c","$RefreshReg$"],"sources":["C:/Users/tay/Documents/GitHub/CodeDojo-Frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api';\r\n\r\nexport default function Dashboard({ handleLogout }) {\r\n    const [userData, setUserData] = useState(null);\r\n    const [challenges, setChallenges] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAll = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const [userRes, chRes] = await Promise.all([\r\n                    API.get('/api/user'),\r\n                    API.get('/api/challenges')\r\n                ]);\r\n                setUserData(userRes.data);\r\n                setChallenges(chRes.data);\r\n            } catch (err) {\r\n                setError('Failed to load dashboard data');\r\n                if (err.response?.status === 401) {\r\n                    handleLogout();\r\n                    navigate('/login');\r\n                }\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchAll();\r\n    }, [handleLogout, navigate]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <p>Loading dashboard...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <p className=\"error-message\">{error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!userData) {\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <p>No user data available</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Identify hard challenges\r\n    const hardChals = challenges.filter(c => c.difficulty === 'hard');\r\n    // Count how many distinct hard challenges have at least one run\r\n    const completedHardCount = hardChals.filter(c => c.run_count > 0).length;\r\n    const hardProgressPercent = hardChals.length\r\n        ? Math.round((completedHardCount / hardChals.length) * 100)\r\n        : 0;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <header className=\"dashboard-header\">\r\n                Welcome to CodeDojo, <strong>{userData.username}</strong>\r\n            </header>\r\n\r\n            <div className=\"dashboard-content\">\r\n                {/* Profile Card */}\r\n                <div className=\"dashboard-card\">\r\n                    <h2>Profile</h2>\r\n                    <p>Username: <strong>{userData.username}</strong></p>\r\n                    <p>Email: <strong>{userData.email}</strong></p>\r\n                </div>\r\n\r\n                {/* XP & Rank Card */}\r\n                <div className=\"dashboard-card\">\r\n                    <h2>Progress</h2>\r\n                    <p>Total XP: <strong>{userData.xp}</strong></p>\r\n                    <p>Current Rank: <strong>{userData.rank}</strong></p>\r\n                </div>\r\n\r\n                {/* Hard-Challenge Completion Card */}\r\n                <div className=\"dashboard-card\" style={{ maxWidth: '500px' }}>\r\n                    <h2>Hard Drills</h2>\r\n                    <p>\r\n                        {completedHardCount} / {hardChals.length} hard challenges completed\r\n                    </p>\r\n                    <div className=\"progress-container\">\r\n                        <div\r\n                            className=\"progress-bar\"\r\n                            style={{ width: `${hardProgressPercent}%` }}\r\n                        />\r\n                    </div>\r\n                    {hardProgressPercent === 100 && (\r\n                        <p className=\"success-message\">All hard drills done! Black Belt unlocked!</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}