{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tay\\\\Desktop\\\\CodoDojo.io\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, Link, useNavigate } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLightMode, setIsLightMode] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    navigate('/');\n  };\n  const toggleLightMode = () => {\n    setIsLightMode(prevMode => !prevMode);\n    document.body.classList.toggle('light-mode', !isLightMode);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isLightMode ? require('./media/ninjatp.png') : require('./media/ninjatpd.png'),\n          alt: \"Home\",\n          className: \"ninja-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLightMode,\n        children: isLightMode ? 'Dark Mode' : 'Light Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"INQF1o5heVJ9cfwO2qk73KTYmAM=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","Link","useNavigate","Login","Register","Dashboard","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","isLightMode","setIsLightMode","navigate","token","localStorage","getItem","handleLogout","removeItem","toggleLightMode","prevMode","document","body","classList","toggle","children","className","to","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","_c","$RefreshReg$"],"sources":["C:/Users/tay/Desktop/CodoDojo.io/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Navigate, Link, useNavigate } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Home from './pages/Home';\r\n\r\nconst App = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isLightMode, setIsLightMode] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        setIsLoggedIn(false);\r\n        navigate('/');\r\n    };\r\n\r\n    const toggleLightMode = () => {\r\n        setIsLightMode((prevMode) => !prevMode);\r\n        document.body.classList.toggle('light-mode', !isLightMode);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Header Section */}\r\n            <div className=\"header-logo\">\r\n                <Link to=\"/\">\r\n                    <img\r\n                        src={isLightMode ? require('./media/ninjatp.png') : require('./media/ninjatpd.png')}\r\n                        alt=\"Home\"\r\n                        className=\"ninja-logo\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"navbar\">\r\n                <button onClick={toggleLightMode}>\r\n                    {isLightMode ? 'Dark Mode' : 'Light Mode'}\r\n                </button>\r\n                {isLoggedIn && (\r\n                    <button className=\"logout-btn\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {/* Routes Section */}\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route\r\n                    path=\"/login\"\r\n                    element={isLoggedIn ? <Navigate to=\"/dashboard\" /> : <Login setIsLoggedIn={setIsLoggedIn} />}\r\n                />\r\n                <Route\r\n                    path=\"/register\"\r\n                    element={isLoggedIn ? <Navigate to=\"/dashboard\" /> : <Register />}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/login\" />}\r\n                />\r\n            </Routes>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}