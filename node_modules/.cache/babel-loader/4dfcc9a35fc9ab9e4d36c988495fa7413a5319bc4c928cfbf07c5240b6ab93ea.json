{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tay\\\\Documents\\\\GitHub\\\\CodeDojo-Frontend\\\\src\\\\pages\\\\ChallengeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChallengeList() {\n  _s();\n  const [challenges, setChallenges] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const loadChallenges = async () => {\n    setIsLoading(true);\n    try {\n      const res = await API.get('/api/challenges');\n      setChallenges(res.data);\n      setError('');\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        setError('Please log in again.');\n        setTimeout(() => navigate('/login'), 1500);\n      } else {\n        setError('Failed to load challenges.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Set up the global ref and clean up\n  useEffect(() => {\n    window.challengeListRef = {\n      loadChallenges\n    };\n    return () => {\n      window.challengeListRef = null;\n    };\n  }, []);\n\n  // Load challenges on mount and when path changes\n  useEffect(() => {\n    if (location.pathname === '/challenges') {\n      loadChallenges();\n    }\n  }, [location.pathname]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading challenges\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-header\",\n        children: \"Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enter-btn\",\n        onClick: loadChallenges,\n        disabled: isLoading,\n        children: isLoading ? 'Refreshing…' : 'Refresh'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: challenges.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [c.title, c.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"completed-badge\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Difficulty: \", c.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"XP Reward: \", c.xp_reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), c.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"enter-btn\",\n          disabled: true,\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: `/challenges/${c.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"enter-btn\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(ChallengeList, \"eTHLPUP0F+g2s5OsoKgwljN/u7E=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ChallengeList;\nvar _c;\n$RefreshReg$(_c, \"ChallengeList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useLocation","API","jsxDEV","_jsxDEV","ChallengeList","_s","challenges","setChallenges","error","setError","isLoading","setIsLoading","navigate","location","loadChallenges","res","get","data","err","_err$response","response","status","setTimeout","window","challengeListRef","pathname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","onClick","disabled","map","c","title","completed","difficulty","xp_reward","to","id","_c","$RefreshReg$"],"sources":["C:/Users/tay/Documents/GitHub/CodeDojo-Frontend/src/pages/ChallengeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport API from '../api';\r\n\r\nexport default function ChallengeList() {\r\n    const [challenges, setChallenges] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const loadChallenges = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const res = await API.get('/api/challenges');\r\n            setChallenges(res.data);\r\n            setError('');\r\n        } catch (err) {\r\n            if (err.response?.status === 401) {\r\n                setError('Please log in again.');\r\n                setTimeout(() => navigate('/login'), 1500);\r\n            } else {\r\n                setError('Failed to load challenges.');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Set up the global ref and clean up\r\n    useEffect(() => {\r\n        window.challengeListRef = { loadChallenges };\r\n        return () => {\r\n            window.challengeListRef = null;\r\n        };\r\n    }, []);\r\n\r\n    // Load challenges on mount and when path changes\r\n    useEffect(() => {\r\n        if (location.pathname === '/challenges') {\r\n            loadChallenges();\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <p className=\"error-message\">{error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <p>Loading challenges…</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <h1 className=\"dashboard-header\">Challenges</h1>\r\n                <button className=\"enter-btn\" onClick={loadChallenges} disabled={isLoading}>\r\n                    {isLoading ? 'Refreshing…' : 'Refresh'}\r\n                </button>\r\n            </div>\r\n            <div className=\"dashboard-content\">\r\n                {challenges.map(c => (\r\n                    <div key={c.id} className=\"dashboard-card\">\r\n                        <h2>\r\n                            {c.title}\r\n                            {c.completed && <span className=\"completed-badge\">Completed</span>}\r\n                        </h2>\r\n                        <p>Difficulty: {c.difficulty}</p>\r\n                        <p>XP Reward: {c.xp_reward}</p>\r\n\r\n                        {c.completed ? (\r\n                            <button className=\"enter-btn\" disabled>\r\n                                Completed\r\n                            </button>\r\n                        ) : (\r\n                            <Link to={`/challenges/${c.id}`}>\r\n                                <button className=\"enter-btn\">Start</button>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}